{
  "type": "excalidraw",
  "version": 2,
  "source": "https://marketplace.visualstudio.com/items?itemName=pomdtr.excalidraw-editor",
  "elements": [
    {
      "type": "text",
      "version": 317,
      "versionNonce": 633125861,
      "isDeleted": false,
      "id": "iFWwrzJ0hlNpGm04UquE6",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -661.834581598248,
      "y": 65.16873772268067,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 393.19189453125,
      "height": 45,
      "seed": 349368798,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1718024115441,
      "link": null,
      "locked": false,
      "fontSize": 36,
      "fontFamily": 1,
      "text": "        System Design",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "        System Design",
      "lineHeight": 1.25,
      "baseline": 32
    },
    {
      "type": "text",
      "version": 219,
      "versionNonce": 778641643,
      "isDeleted": false,
      "id": "2lQ1quE5kC5sKI3BoDwDe",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -832.7903414950415,
      "y": 259.018524243423,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 118.55989074707031,
      "height": 25,
      "seed": 798295582,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [
        {
          "id": "PRe9RUDF98he_zMYywzZV",
          "type": "arrow"
        }
      ],
      "updated": 1718024115441,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Input String",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Input String",
      "lineHeight": 1.25,
      "baseline": 18
    },
    {
      "type": "arrow",
      "version": 315,
      "versionNonce": 192200347,
      "isDeleted": false,
      "id": "PRe9RUDF98he_zMYywzZV",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -776.5050101093584,
      "y": 296.018524243423,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 3.7146686143169063,
      "height": 55,
      "seed": 160076382,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 2
      },
      "boundElements": [],
      "updated": 1717865377683,
      "link": null,
      "locked": false,
      "startBinding": {
        "elementId": "2lQ1quE5kC5sKI3BoDwDe",
        "focus": 0.07732959760355558,
        "gap": 12
      },
      "endBinding": null,
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [
        [
          0,
          0
        ],
        [
          3.7146686143169063,
          55
        ]
      ]
    },
    {
      "type": "text",
      "version": 361,
      "versionNonce": 551941957,
      "isDeleted": false,
      "id": "YD2NyoaGtgIfeaEG6vhOC",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -1028.125542071093,
      "y": 376.305066164229,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 549.6596069335938,
      "height": 100,
      "seed": 1568970398,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [
        {
          "id": "WjgUPAswpZBsxT_TvvqDf",
          "type": "arrow"
        }
      ],
      "updated": 1718024115441,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "This input string is then tokenised By the Tokeniser\n(Broken down in to individual characters and these\ncharacters then make up the grammar of the language.\nThis is the Vec<Token>",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "This input string is then tokenised By the Tokeniser\n(Broken down in to individual characters and these\ncharacters then make up the grammar of the language.\nThis is the Vec<Token>",
      "lineHeight": 1.25,
      "baseline": 93
    },
    {
      "type": "arrow",
      "version": 74,
      "versionNonce": 288895803,
      "isDeleted": false,
      "id": "WjgUPAswpZBsxT_TvvqDf",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -463.7903414950415,
      "y": 410.018524243423,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 162,
      "height": 0,
      "seed": 1681134302,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 2
      },
      "boundElements": [],
      "updated": 1717865377683,
      "link": null,
      "locked": false,
      "startBinding": {
        "elementId": "YD2NyoaGtgIfeaEG6vhOC",
        "focus": -0.3257308384161206,
        "gap": 14.67559364245767
      },
      "endBinding": null,
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [
        [
          0,
          0
        ],
        [
          162,
          0
        ]
      ]
    },
    {
      "type": "text",
      "version": 285,
      "versionNonce": 1108069259,
      "isDeleted": false,
      "id": "gSmiVvgb6Q_0-SyF9UOhD",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -246.7903414950415,
      "y": 363.018524243423,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 431.8595886230469,
      "height": 100,
      "seed": 405407518,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1718024115442,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "These tokens are then processed further\nto derive symbols and built in's form them,\nSuch as =, !=, SELECT, WHERE, AVG etc.\nThis should be the Vec<PreprocessedToken>",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "These tokens are then processed further\nto derive symbols and built in's form them,\nSuch as =, !=, SELECT, WHERE, AVG etc.\nThis should be the Vec<PreprocessedToken>",
      "lineHeight": 1.25,
      "baseline": 93
    },
    {
      "type": "rectangle",
      "version": 72,
      "versionNonce": 1139020763,
      "isDeleted": false,
      "id": "GCmAoKkCvOt19HRsRDIwB",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -841.7903414950415,
      "y": 242.01852424342297,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 138,
      "height": 56,
      "seed": 2044162910,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "boundElements": [],
      "updated": 1717865377684,
      "link": null,
      "locked": false
    },
    {
      "type": "rectangle",
      "version": 310,
      "versionNonce": 1794894677,
      "isDeleted": false,
      "id": "9IVV_8GNS-gQFFe58Yhx8",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -1090.0992798482146,
      "y": 346.63302493322755,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 1291,
      "height": 150.00000000000003,
      "seed": 1401771934,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "boundElements": [],
      "updated": 1717865377684,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 123,
      "versionNonce": 235980453,
      "isDeleted": false,
      "id": "M1fht7WmiKu0Y5xmQUq84",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 693.117865789445,
      "y": 151.67360467082634,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 510.73956298828125,
      "height": 25,
      "seed": 2105324510,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1718024115442,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Examples of Vec<Token> & Vec<PreprocessedToken>",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Examples of Vec<Token> & Vec<PreprocessedToken>",
      "lineHeight": 1.25,
      "baseline": 18
    },
    {
      "type": "text",
      "version": 984,
      "versionNonce": 759177771,
      "isDeleted": false,
      "id": "gj-nkoDe-XgIFRvoN0LW7",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 617.5905123934792,
      "y": 229.59865182539423,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 1047.1990966796875,
      "height": 325,
      "seed": 565610526,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1718024115442,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "For a query like: SELECT * FROM USERS WHERE Name = 'Aradhya';\n\nWe need to make sure we know the structure of these two before we code them out.\nVec<Token> => [Token(character: 'S', position: 0). Token(character: 'E', position: 1)...]\nVec<PreprocessedToken> => [PreprocessedToken(Symbol(Select), PreprocessedToken(Symbol(WildCard)),\nPreprocessedToken(Symbol(From)), PreprocessedToken(Identifier(Users)), PreprocessedToken(Symbol(Where)),\nPreprocessedToken(Identifier(Name)), PreprocessedToken(Operator(=)), \n], \n\n\nWe have currently implemented this, however something like: \nSELECT * FROM USERS WHERE Name='Aradhya' breaks everything since,\nwe don't treat the Name='Aradhya' as a singular Identifier.",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "For a query like: SELECT * FROM USERS WHERE Name = 'Aradhya';\n\nWe need to make sure we know the structure of these two before we code them out.\nVec<Token> => [Token(character: 'S', position: 0). Token(character: 'E', position: 1)...]\nVec<PreprocessedToken> => [PreprocessedToken(Symbol(Select), PreprocessedToken(Symbol(WildCard)),\nPreprocessedToken(Symbol(From)), PreprocessedToken(Identifier(Users)), PreprocessedToken(Symbol(Where)),\nPreprocessedToken(Identifier(Name)), PreprocessedToken(Operator(=)), \n], \n\n\nWe have currently implemented this, however something like: \nSELECT * FROM USERS WHERE Name='Aradhya' breaks everything since,\nwe don't treat the Name='Aradhya' as a singular Identifier.",
      "lineHeight": 1.25,
      "baseline": 318
    },
    {
      "type": "text",
      "version": 108,
      "versionNonce": 1609214469,
      "isDeleted": false,
      "id": "hqcb3SCsUKxBMn51zoQYM",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 255.15011152067495,
      "y": 141.84887812516496,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 279.8639221191406,
      "height": 45,
      "seed": 2872414,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1718024115442,
      "link": null,
      "locked": false,
      "fontSize": 36,
      "fontFamily": 1,
      "text": "Day 1 7th June.",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Day 1 7th June.",
      "lineHeight": 1.25,
      "baseline": 32
    },
    {
      "type": "text",
      "version": 137,
      "versionNonce": 1760601291,
      "isDeleted": false,
      "id": "4Z2MqFgiO8JhUNFBSFbXo",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 621.0708344993282,
      "y": 595.2350661329651,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 1033.7392578125,
      "height": 25,
      "seed": 850237598,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1718024115442,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Fixed the problems mentioned above need to clear out the code a bit however, and add more operators.",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Fixed the problems mentioned above need to clear out the code a bit however, and add more operators.",
      "lineHeight": 1.25,
      "baseline": 18
    },
    {
      "type": "text",
      "version": 39,
      "versionNonce": 1467031909,
      "isDeleted": false,
      "id": "aPicfIY-K1DoyYwnnO2GA",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 898.0719027649521,
      "y": 65.52808346248105,
      "strokeColor": "#e03131",
      "backgroundColor": "transparent",
      "width": 102.70796203613281,
      "height": 45,
      "seed": 1452510238,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1718024115443,
      "link": null,
      "locked": false,
      "fontSize": 36,
      "fontFamily": 1,
      "text": "Notes",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Notes",
      "lineHeight": 1.25,
      "baseline": 32
    },
    {
      "type": "text",
      "version": 154,
      "versionNonce": 1823986539,
      "isDeleted": false,
      "id": "TF-GjUlnLw428VLSXMWtO",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 625.7931726476477,
      "y": 690.2029516783707,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 622.1394653320312,
      "height": 25,
      "seed": 1298141726,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1718024115443,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Todo for the day -> Figure out how to work with aggregators.",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Todo for the day -> Figure out how to work with aggregators.",
      "lineHeight": 1.25,
      "baseline": 18
    },
    {
      "type": "text",
      "version": 176,
      "versionNonce": 972139717,
      "isDeleted": false,
      "id": "UireKkMkefnkMiNqjju8m",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 251.83483234989825,
      "y": 10.249270301246668,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 500.1597595214844,
      "height": 100,
      "seed": 1635041310,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1718024115443,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "EXAMPLE SQL QUERIES:\nSELECT * FROM USERS WHERE NAME='ARADHYA';\nSELECT AVG(Name) FROM USERS;\n",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "EXAMPLE SQL QUERIES:\nSELECT * FROM USERS WHERE NAME='ARADHYA';\nSELECT AVG(Name) FROM USERS;\n",
      "lineHeight": 1.25,
      "baseline": 93
    },
    {
      "type": "text",
      "version": 320,
      "versionNonce": 1491086859,
      "isDeleted": false,
      "id": "TeBd1tRjPJAzmdNU5G4AG",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 608.5554866783083,
      "y": 733.3926527580504,
      "strokeColor": "#e03131",
      "backgroundColor": "transparent",
      "width": 1228.247802734375,
      "height": 225,
      "seed": 941592578,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1718024115443,
      "link": null,
      "locked": false,
      "fontSize": 36,
      "fontFamily": 1,
      "text": "\nREALIZATION OF THE DAY -> SQLPARSERS EXIST\nAND ARE VERY EASY TO USE AND ARE MUCH MORE ROBUST\nTHAN ANYTHING THAT I CAN BUILD EVEN IF I HAVE A YEAR\nTO MAKE THIS THING (WHEN I ACTUALLY ONLY HAVE 3 MONTHS).",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "\nREALIZATION OF THE DAY -> SQLPARSERS EXIST\nAND ARE VERY EASY TO USE AND ARE MUCH MORE ROBUST\nTHAN ANYTHING THAT I CAN BUILD EVEN IF I HAVE A YEAR\nTO MAKE THIS THING (WHEN I ACTUALLY ONLY HAVE 3 MONTHS).",
      "lineHeight": 1.25,
      "baseline": 212
    },
    {
      "type": "rectangle",
      "version": 152,
      "versionNonce": 714421813,
      "isDeleted": false,
      "id": "6j2gXZ6b6XN2yUowb7Q8x",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 233.169810685426,
      "y": 125.74253639588284,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 1720.4370874740553,
      "height": 907.169632785052,
      "seed": 463270651,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "boundElements": [],
      "updated": 1717865377684,
      "link": null,
      "locked": false
    },
    {
      "type": "rectangle",
      "version": 209,
      "versionNonce": 626748475,
      "isDeleted": false,
      "id": "IK8qNulvbDIBsSiV2HLof",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 265.1517061341069,
      "y": 1086.9446369146892,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 1721.0887681890076,
      "height": 1344.2230313157586,
      "seed": 1188269403,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "boundElements": [],
      "updated": 1717879485213,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 40,
      "versionNonce": 1191824421,
      "isDeleted": false,
      "id": "JyqodS3K1vPYqZAJzmcEG",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 283.138682736542,
      "y": 1152.6567865993602,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 294.04791259765625,
      "height": 45,
      "seed": 1346577211,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1718024115443,
      "link": null,
      "locked": false,
      "fontSize": 36,
      "fontFamily": 1,
      "text": "Day 2 8th June",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Day 2 8th June",
      "lineHeight": 1.25,
      "baseline": 32
    },
    {
      "type": "text",
      "version": 374,
      "versionNonce": 1617179819,
      "isDeleted": false,
      "id": "-aAJIx4lOMAgjysryHYcw",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 600.299976631854,
      "y": 1209.8054178907496,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 1057.0361328125,
      "height": 109.6906873749827,
      "seed": 1216560821,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1718024115443,
      "link": null,
      "locked": false,
      "fontSize": 29.250849966662052,
      "fontFamily": 1,
      "text": "Scrap the Idea above and figure out a new way since the last one is\ngetting way to complicated, with nested enums and confusing abrevatons.\nEssentially we need a parser to analyze the SQL query.",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Scrap the Idea above and figure out a new way since the last one is\ngetting way to complicated, with nested enums and confusing abrevatons.\nEssentially we need a parser to analyze the SQL query.",
      "lineHeight": 1.25,
      "baseline": 99
    },
    {
      "type": "text",
      "version": 420,
      "versionNonce": 1856438149,
      "isDeleted": false,
      "id": "JTBDUfHOIVvNvQy60CxSU",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 606.3875587609787,
      "y": 1403.1043854459674,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 936.487548828125,
      "height": 70,
      "seed": 15888341,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1718024115444,
      "link": null,
      "locked": false,
      "fontSize": 28,
      "fontFamily": 1,
      "text": "Let's stick with SQLParser and figure out how differnential privcay\nworks before implementing anything this time around.",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Let's stick with SQLParser and figure out how differnential privcay\nworks before implementing anything this time around.",
      "lineHeight": 1.25,
      "baseline": 60
    },
    {
      "type": "text",
      "version": 1068,
      "versionNonce": 1928226635,
      "isDeleted": false,
      "id": "2s9eN1NDzxeBzTj66F1fQ",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 598.6031406870168,
      "y": 1522.8101193692714,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 1363.907470703125,
      "height": 455,
      "seed": 943325845,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1718024115444,
      "link": null,
      "locked": false,
      "fontSize": 28,
      "fontFamily": 1,
      "text": "Concepts of differntial privacy:\n    1. DIffer privacy ensures individual privacy by not making any one data point effect\n      the outcome drastically.\n    2. Epsilon is the privacy budget, if this is low then privacy is high however\n       the accuracy is low.\n    3. Sensitivity is a measure of how a single person data can change the output of a function.\n    4. Finally privacy is achived by adding some amount of noise, this noise, is laplace or\n       gaussian in general this is added to the output of the query result.\n       and the amount of noise depends on the privacy budget and the sensitivity\n       of the query.\n    5. Laplace mechanism finally adds noise from a laplace distribution, this\n       noise is porpotional to the sensitivity of the query and inversely propotional\n       to the epsilon value.",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Concepts of differntial privacy:\n    1. DIffer privacy ensures individual privacy by not making any one data point effect\n      the outcome drastically.\n    2. Epsilon is the privacy budget, if this is low then privacy is high however\n       the accuracy is low.\n    3. Sensitivity is a measure of how a single person data can change the output of a function.\n    4. Finally privacy is achived by adding some amount of noise, this noise, is laplace or\n       gaussian in general this is added to the output of the query result.\n       and the amount of noise depends on the privacy budget and the sensitivity\n       of the query.\n    5. Laplace mechanism finally adds noise from a laplace distribution, this\n       noise is porpotional to the sensitivity of the query and inversely propotional\n       to the epsilon value.",
      "lineHeight": 1.25,
      "baseline": 445
    },
    {
      "type": "text",
      "version": 523,
      "versionNonce": 1191626469,
      "isDeleted": false,
      "id": "x_U8YmwWEKFxA3a-6O2HY",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 596.3360814719471,
      "y": 2036.4120381792782,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 1254.3154296875,
      "height": 175,
      "seed": 1806872379,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1718024115444,
      "link": null,
      "locked": false,
      "fontSize": 28,
      "fontFamily": 1,
      "text": "Moving to a generic SQL query analyser instead of a parser, we don't really need to build\na whole ast just to figure out what tables, what columns are being queried do we?\n\nMade functions for handling TableNames, and Read SQLs, Since we don't allow ny writes!\nSQL Injection might be a problem and we need to check for that later down the line.",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Moving to a generic SQL query analyser instead of a parser, we don't really need to build\na whole ast just to figure out what tables, what columns are being queried do we?\n\nMade functions for handling TableNames, and Read SQLs, Since we don't allow ny writes!\nSQL Injection might be a problem and we need to check for that later down the line.",
      "lineHeight": 1.25,
      "baseline": 165
    },
    {
      "id": "XTEPgcQDhUPjQzU-GLS3y",
      "type": "rectangle",
      "x": 269.6536291357057,
      "y": 2517.8364065566016,
      "width": 1724.355868582209,
      "height": 946.0528684892065,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "seed": 1119265349,
      "version": 103,
      "versionNonce": 567371851,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1718027888227,
      "link": null,
      "locked": false
    },
    {
      "id": "HFjXqujGhzg2t7-26FTeK",
      "type": "text",
      "x": 359.04045010257903,
      "y": 2647.7284236740607,
      "width": 166.61990356445312,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "seed": 1678119307,
      "version": 38,
      "versionNonce": 1876296939,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1718027913490,
      "link": null,
      "locked": false,
      "text": "Day 3 10th June",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 18,
      "containerId": null,
      "originalText": "Day 3 10th June",
      "lineHeight": 1.25
    },
    {
      "id": "WN8oO27NbVHQZV4_9IZfv",
      "type": "text",
      "x": 626.7149456484589,
      "y": 2660.0208304786515,
      "width": 706.2194213867188,
      "height": 75,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "seed": 626526411,
      "version": 258,
      "versionNonce": 1597794501,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1718027970571,
      "link": null,
      "locked": false,
      "text": "Written functions and tests to get columns being used in the sql query\ntables being used etc, however need to tackle joins or maybe not\nLets see how that goes, written tests as well.",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 68,
      "containerId": null,
      "originalText": "Written functions and tests to get columns being used in the sql query\ntables being used etc, however need to tackle joins or maybe not\nLets see how that goes, written tests as well.",
      "lineHeight": 1.25
    }
  ],
  "appState": {
    "gridSize": null,
    "viewBackgroundColor": "#fdf8f6"
  },
  "files": {}
}